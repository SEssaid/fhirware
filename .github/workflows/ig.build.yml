name: Build IG with publisher version
defaults:
  run:
    shell: bash
on:
  workflow_call:
    inputs:

      # branch/PR home repo
      owner-repo:
        type: string
        required: true
      ref:
        type: string
        required: true
      depth:
        type: number
        required: true

      # build related
      ig-root:
        description: The relative path, in the repo, to the IG root folder. This folder is mounted to /ig in the Docker container.
        required: true
        type: string

      publisher-args:
        description: The parameters to pass to the publisher.jar. Keep in mind that the IG root folder is at /ig.
        required: true
        type: string

      docker-tag:
        description: "The Docker tag to use from: https://hub.docker.com/repository/docker/sessaid/ig-publisher/tags"
        required: true
        type: string

      # base for PR builds
      # this being set is an indicator of a PR build that should be merge-built as well if possible
      try-merge:
        description: if a merge with a base ref should be done. this is a string due to not being clear on boolean type
        # TODO: See: https://github.com/actions/runner/issues/1483
        type: string

      base-ref:
        type: string
      pr-number:
        type: string


      # publication related
      io-owner:
        description: The owner of the IO repo
        type: string

      io-repo:
        description: If set, it is a GitHub dedicated repository (repo name only) for publishing the IG's output.
        type: string

      io-branch:
        description: The branch to use for publishing the IG's output. gh-pages by default so it works on github.io
        type: string
        default: gh-pages

      io-path:
        description: "A path to publish under. If not set, a default is calculated. TODO: document this."
        type: string

    secrets:
#      token:
#        required: true
      io-token:
        required: true
jobs:
  docker-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout IG
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.owner-repo }}
          ref: ${{ inputs.ref }}
#          token: ${{ secrets.token }}
          path: ig-clone
          fetch-depth: ${{ inputs.depth }}

      - name: Docker build IG
        run: |
          echo Running IG build with inputs: '${{ toJSON(inputs) }}'
          mkdir -p "${GITHUB_WORKSPACE}/ig-clone/${{inputs.ig-root}}/output"
          echo hello > "${GITHUB_WORKSPACE}/ig-clone/${{inputs.ig-root}}/output/index.html"
          #docker pull "sessaid/ig-publisher:${{inputs.docker-tag}}"
          #docker run --rm --volume "${GITHUB_WORKSPACE}/ig-clone/${{inputs.ig-root}}:/ig" "sessaid/ig-publisher:${{inputs.docker-tag}}"  ${{ inputs.publisher-args }}

      # Publish if requested
      - name: Checkout IO
        if: inputs.io-repo != ''
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.io-owner }}/${{ inputs.io-repo }}
          ref: ${{ inputs.io-branch }}
          path: io-clone
          token: ${{ secrets.io-token }}

      - name: Publish IO
        if: inputs.io-repo != ''
        run: |
          which bash
          set -x
          env | sort
          [[ -d "${GITHUB_WORKSPACE}/io-clone/${{ inputs.io-path }}" ]] &&  rm -rf "${GITHUB_WORKSPACE}/io-clone/${{ inputs.io-path }}"
          mkdir -p "${GITHUB_WORKSPACE}/io-clone/${{ inputs.io-path }}"
          cp -ra "${GITHUB_WORKSPACE}/ig-clone/${{inputs.ig-root}}/output/*" "${GITHUB_WORKSPACE}/io-clone/${{ inputs.io-path }}"
          
          cd "${GITHUB_WORKSPACE}/io-clone"
          touch IG_BUILDS.md
          # echo hello >> IG_BUILDS.md.new
          { 
            cat IG_BUILDS.md | grep -v '${{ inputs.io-path }}'; 
            printf '%s\n' "[${{ inputs.io-path }}](http://${{ inputs.io-owner }}.github.io/${{ inputs.io-repo }}/${{ inputs.io-path }}/)";
            echo some line; 
          } | sort > IG_BUILDS.md.new
          mv -f IG_BUILDS.md.new IG_BUILDS.md
          
          #printf '%s\n' "[${{ inputs.io-path }}](http://${{ inputs.io-owner }}.github.io/${{ inputs.io-repo }}/${{ inputs.io-path }}/)"
          #ls -la
          #pwd
          git add -A
          #git status --porcelain
          if [[ -z "$(git status --porcelain)" ]]; then
            echo NO changes
          else
            git config --global user.name 'Publisher IO'
            git config --global user.email 'shahim@essaid.com'
            git commit -m "IG: ${{ inputs.owner-repo }}, ref: ${{ inputs.ref }}  run_id: ${{ github.run_id }}, run_number: ${{ github.run_number }}, run_attempt: ${{ github.run_attempt }}"
            cat .git/config
            git remote set-url origin "https://github.com/${{inputs.io-owner}}/${{inputs.io-repo}}"
            git push
          fi

